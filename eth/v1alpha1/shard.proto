// Copyright 2020 Prysmatic Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package ethereum.eth.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option csharp_namespace = "Ethereum.Eth.v1alpha1";
option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth";

message ShardBlock {
    bytes shard_parent_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes beacon_parent_root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
    uint64 slot = 3;
    uint64 shard = 4;
    uint64 proposer_index = 5;
    bytes body = 6 [(gogoproto.moretags) = "ssz-max:\"1048576\""];
}

message SignedShardBlock {
    ShardBlock message = 1;
    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
}

message ShardBlockHeader {
    bytes shard_parent_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
    bytes beacon_parent_root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
    uint64 slot = 3;
    uint64 shard = 4;
    uint64 proposer_index = 5;
    bytes body_root = 6 [(gogoproto.moretags) = "ssz-size:\"32\""];
}

message ShardState {
    uint64 slot = 1;
    uint64 gas_price = 2;
    bytes latest_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
}

message ShardTransition {
    uint64 start_slot = 1;
    repeated uint64 shard_block_lengths = 2  [(gogoproto.moretags) = "ssz-max:\"12\""];
    repeated bytes shard_data_roots = 3 [(gogoproto.moretags) = "ssz-size:\"?,32\" ssz-max:\"12\""];
    repeated ShardState shard_states = 4 [(gogoproto.moretags) = "ssz-max:\"12\""];
    bytes proposer_signature_aggregate = 5 [(gogoproto.moretags) = "ssz-size:\"96\""];
}

message ShardTransitionCandidate {
    uint64 start_slot = 1;
    repeated uint64 shard_block_lengths = 2  [(gogoproto.moretags) = "ssz-max:\"12\""];
    repeated bytes shard_data_roots = 3 [(gogoproto.moretags) = "ssz-size:\"?,32\" ssz-max:\"12\""];
    repeated ShardState shard_states = 4 [(gogoproto.moretags) = "ssz-max:\"12\""];
    bytes proposer_signature_aggregate = 5 [(gogoproto.moretags) = "ssz-size:\"96\""];
}

message CompactCommittee {
    repeated bytes pub_keys = 1  [(gogoproto.moretags) = "ssz-size:\"?,48\" ssz-max:\"2048\""];
    repeated uint64 compact_validators = 2 [(gogoproto.moretags) = "ssz-max:\"2048\""];
}
